syntax = "proto3";

package yarrow;

message Error {
    string message = 1;
}

enum DataType {
    BYTES = 0; // default value is the unset type
    BOOL = 1;
    I64 = 2;
    F64 = 3;
    STRING = 4;
    HASHMAP_STRING = 5;
}

message Array1Dbool {
    repeated bool data = 1;

    // length of axes
    repeated uint64 shape = 7;

    // order of axes
    repeated uint64 order = 8;
}

message Array1Di64 {
    repeated int64 data = 1;

    // length of axes
    repeated uint64 shape = 7;

    // order of axes
    repeated uint64 order = 8;
}

message Array1Df64 {
    repeated double data = 1;

    // length of axes
    repeated uint64 shape = 7;

    // order of axes
    repeated uint64 order = 8;
}

message Array1Dstr {
    repeated string data = 1;

    // length of axes
    repeated uint64 shape = 7;

    // order of axes
    repeated uint64 order = 8;
}

message HashmapString {
    map<string, Value> data = 1;
}

message Value {
    // type of element
    DataType datatype = 1;

    oneof data {
        // bytes bytes = 2;
        Array1Dbool bool = 3;
        Array1Di64 i64 = 4;
        Array1Df64 f64 = 5;
        Array1Dstr string = 6;
        HashmapString hashmapString = 7;
    }
}

enum Mechanism {
    UNKNOWN = 0;
    LAPLACE = 1;
}

// return type for validator's computed overall epsilon, per dataset 
message Epsilon {
    map<string, float> usage = 1;
}

message Dataset {
    Metadata metadata = 1;
    map<string, Table> tables = 2;
}

message Table {
    Metadata metadata = 1;
    oneof value {
        string file_path = 2;
        string url_path = 3;
        Value literal = 4; // testing only
    }
}

message Metadata {
    string about = 1;
    string license = 2;
    // etc...
}

