syntax = "proto3";

package yarrow;

import "value.proto";
import "components.proto";

message Error {
    string message = 1;
}

message Analysis {
    PrivacyDefinition privacy_definition = 1;
    ComputationGraph computation_graph = 2;
}
message PrivacyDefinition {
    // upper bound
    uint32 group_size = 4;

    enum Distance {
        // (e, 0)-differential privacy
        PURE = 0;

        // (e, d)-differential privacy
        APPROXIMATE = 1;

        // https://arxiv.org/pdf/1702.07476.pdf
        RENYI = 2;

        // https://arxiv.org/pdf/1603.01887.pdf
        CONCENTRATED = 3;

        // https://arxiv.org/pdf/1905.02383.pdf
        F = 4;
    }
    Distance distance = 5;

    enum Neighboring {
        SUBSTITUTE = 0;
        ADD_REMOVE = 1;
    }
    Neighboring neighboring = 6;
}
message ComputationGraph {
    map<uint32, Component> value = 1;
}

message Release {
    map<uint32, ReleaseNode> values = 1;
}
message ReleaseNode {
    Value value = 1;
    repeated PrivacyUsage privacy_usage = 2;
}

message ValueProperties {
    oneof variant {
        HashmapProperties hashmap = 1;
        ArrayNDProperties arraynd = 2;
        Vector2DJaggedProperties vector2djagged = 3;
    }
}

message HashmapProperties {
    I64Null num_records = 1;
    bool disjoint = 2;
    bool columnar = 3;
    HashmapValueProperties properties = 4;
}

message HashmapValueProperties {
    oneof variant {
        HashmapValuePropertiesStr string = 1;
        HashmapValuePropertiesBool bool = 2;
        HashmapValuePropertiesI64 i64 = 3;
    }
}

message HashmapValuePropertiesStr {
    map<string, ValueProperties> data = 1;
}
message HashmapValuePropertiesBool {
    map<bool, ValueProperties> data = 1;
}
message HashmapValuePropertiesI64 {
    map<int64, ValueProperties> data = 1;
}

message ArrayNDProperties {
    I64Null num_records = 1;
    I64Null num_columns = 2;
    bool nullity = 3;
    Array1dF64 c_stability = 4;

    message AggregatorProperties {
        Component component = 1;
        map<string, ValueProperties> properties = 2;
    }
    AggregatorProperties aggregator = 5;
    
    DataType data_type = 6;
    bool releasable = 7;

    oneof nature {
        NatureContinuous continuous = 10;
        NatureCategorical categorical = 11;
    }
}
message NatureContinuous {
    Array1dNull minimum = 1;
    Array1dNull maximum = 2;
}
message NatureCategorical {
    Array2dJagged categories = 1;
}

message Vector2DJaggedProperties {}

message Accuracy {
    double value = 1;
}

